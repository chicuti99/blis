generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x", "linux-musl-arm64-openssl-1.1.x"]
}


datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")

}

model User {
  id         String    @id @default(uuid())
  name       String
  birthdate  DateTime
  email      String    @unique
  password   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  documents  UserDocument[]
  abilities  UsersAbilities[]
}

model UserDocument {
  id        String   @id @default(uuid())
  name      String
  url       String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Ability {
  id        String           @id @default(uuid())
  name      String
  active    Boolean
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  users     UsersAbilities[]
}

model UsersAbilities {
  id              String   @id @default(uuid())
  userId          String
  abilityId       String
  yearsExperience Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  ability         Ability  @relation(fields: [abilityId], references: [id], onDelete: Cascade)
}
